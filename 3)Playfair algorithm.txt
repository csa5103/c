#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

char keySquare[SIZE][SIZE];

void generateKeySquare(char *key) {
    int used[26] = {0};
    int i, j, k = 0;
    
    for (i = 0; i < strlen(key); i++) {
        if (key[i] == 'J') key[i] = 'I';
        if (!used[key[i] - 'A']) {
            used[key[i] - 'A'] = 1;
            keySquare[k / SIZE][k % SIZE] = key[i];
            k++;
        }
    }
    
    for (i = 0; i < 26; i++) {
        if (i + 'A' == 'J') continue;
        if (!used[i]) {
            keySquare[k / SIZE][k % SIZE] = i + 'A';
            k++;
        }
    }
}

void findPosition(char ch, int *row, int *col) {
    if (ch == 'J') ch = 'I';
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (keySquare[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void playfairCipher(char *text) {
    int len = strlen(text);
    for (int i = 0; i < len; i += 2) {
        int row1, col1, row2, col2;
        findPosition(text[i], &row1, &col1);
        findPosition(text[i + 1], &row2, &col2);

        if (row1 == row2) {
            text[i] = keySquare[row1][(col1 + 1) % SIZE];
            text[i + 1] = keySquare[row2][(col2 + 1) % SIZE];
        } else if (col1 == col2) {
            text[i] = keySquare[(row1 + 1) % SIZE][col1];
            text[i + 1] = keySquare[(row2 + 1) % SIZE][col2];
        } else {
            text[i] = keySquare[row1][col2];
            text[i + 1] = keySquare[row2][col1];
        }
    }
}

int main() {
    char key[] = "PLAYFAIREXAMPLE";
    char text[100];
    
    printf("Enter text to encrypt (uppercase, no spaces, even length): ");
    scanf("%s", text);
    
    generateKeySquare(key);
    playfairCipher(text);
    
    printf("Encrypted text: %s\n", text);
    
    return 0;
}