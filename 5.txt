#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define MOD 26

int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

void affine_cipher(char *text, int a, int b) {
    if (gcd(a, MOD) != 1) {
        printf("Invalid value for a. It must be coprime with 26.\n");
        return;
    }
    
    for (int i = 0; text[i] != '\0'; i++) {
        if (isalpha(text[i])) {
            char base = islower(text[i]) ? 'a' : 'A';
            text[i] = ((a * (text[i] - base) + b) % MOD) + base;
        }
    }
}

int main() {
    char text[100];
    int a, b;
    
    printf("Enter text to encrypt: ");
    fgets(text, sizeof(text), stdin);
    text[strcspn(text, "\n")] = 0;
    
    printf("Enter values for a and b (a must be coprime with 26): ");
    scanf("%d %d", &a, &b);
    
    affine_cipher(text, a, b);
    printf("Encrypted text: %s\n", text);
    
    return 0;
}
